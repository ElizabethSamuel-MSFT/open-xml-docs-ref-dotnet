<Type Name="TextDefault" FullName="DocumentFormat.OpenXml.Drawing.TextDefault">
  <TypeSignature Language="C#" Value="public class TextDefault : DocumentFormat.OpenXml.Drawing.DefaultShapeDefinitionType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextDefault extends DocumentFormat.OpenXml.Drawing.DefaultShapeDefinitionType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Drawing.TextDefault" />
  <TypeSignature Language="VB.NET" Value="Public Class TextDefault&#xA;Inherits DefaultShapeDefinitionType" />
  <TypeSignature Language="F#" Value="type TextDefault = class&#xA;    inherit DefaultShapeDefinitionType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Drawing.DefaultShapeDefinitionType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(10, "txDef")]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(10, "txDef")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Text Default.</para>
      <para>This class is available in Office 2007 or above.</para>
      <para>When the object is serialized out as xml, it's qualified name is a:txDef.</para>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **txDef (Text Default)**  
  
 This element defines the default formatting which is applied to text in a document by default.  The default formatting can and should be applied to the shape when it is initially inserted into a document.  
  
 [*Example*:  Consider the following example of a text default being used within DrawingML:  
  
```xml  
<txDef>  
  <spPr>  
    <solidFill>  
      <schemeClr val="accent2">  
        <shade val="75000"/>  
      </schemeClr>  
    </solidFill>  
  </spPr>  
  <bodyPr rtlCol="0" anchor="ctr"/>  
  <lstStyle>  
    <defPPr algn="ctr">  
      <defRPr/>  
    </defPPr>  
  </lstStyle>  
  <style>  
    <lnRef idx="1">  
      <schemeClr val="accent1"/>  
    </lnRef>  
    <fillRef idx="2">  
      <schemeClr val="accent1"/>  
    </fillRef>  
    <effectRef idx="1">  
      <schemeClr val="accent1"/>  
    </effectRef>  
    <fontRef idx="minor">  
      <schemeClr val="dk1"/>  
    </fontRef>  
  </style>  
</txDef>  
```  
  
 In this example, we see a default text which references a certain themed fill, line, effect, and font along with an override fill to these.  *end example*]  
  
|Parent Elements|  
|---------------------|  
|objectDefaults (§20.1.6.7)|  
  
|Child Elements|Subclause|  
|--------------------|---------------|  
|bodyPr (Body Properties)|§21.1.2.1.1|  
|extLst (Extension List)|§20.1.2.2.15|  
|lstStyle (Text List Styles)|§21.1.2.4.12|  
|spPr (Shape Properties)|§20.1.2.2.35|  
|style (Shape Style)|§20.1.2.2.37|  
  
 [*Note*: The W3C XML Schema definition of this element’s content model (CT_DefaultShapeDefinition) is located in §A.4.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
    <remark>
      <para>The following table lists the possible child types:</para>
      <list type="bullet">
        <item>
          <description>ShapeProperties &lt;a:spPr&gt;</description>
        </item>
        <item>
          <description>BodyProperties &lt;a:bodyPr&gt;</description>
        </item>
        <item>
          <description>ListStyle &lt;a:lstStyle&gt;</description>
        </item>
        <item>
          <description>ShapeStyle &lt;a:style&gt;</description>
        </item>
        <item>
          <description>ExtensionList &lt;a:extLst&gt;</description>
        </item>
      </list>
    </remark>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.TextDefault.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the TextDefault class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDefault (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.TextDefault.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.TextDefault : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Drawing.TextDefault" Usage="new DocumentFormat.OpenXml.Drawing.TextDefault childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>
            Initializes a new instance of the TextDefault class with the specified child elements.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDefault (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.TextDefault.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.TextDefault : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Drawing.TextDefault" Usage="new DocumentFormat.OpenXml.Drawing.TextDefault childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>
            Initializes a new instance of the TextDefault class with the specified child elements.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDefault (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.TextDefault.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Drawing.TextDefault : string -&gt; DocumentFormat.OpenXml.Drawing.TextDefault" Usage="new DocumentFormat.OpenXml.Drawing.TextDefault outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>
            Initializes a new instance of the TextDefault class from outer XML.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Drawing.TextDefault.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="textDefault.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
        <summary>Creates a duplicate of this node.</summary>
        <returns>Returns the cloned node.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
